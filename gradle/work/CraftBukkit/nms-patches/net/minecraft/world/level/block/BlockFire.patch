--- a/net/minecraft/world/level/block/BlockFire.java
+++ b/net/minecraft/world/level/block/BlockFire.java
@@ -27,6 +27,14 @@
 import net.minecraft.world.phys.shapes.VoxelShapeCollision;
 import net.minecraft.world.phys.shapes.VoxelShapes;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.block.CraftBlockStates;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockBurnEvent;
+import org.bukkit.event.block.BlockFadeEvent;
+// CraftBukkit end
+
 public class BlockFire extends BlockFireAbstract {
 
     public static final int MAX_AGE = 15;
@@ -92,7 +100,24 @@
 
     @Override
     public IBlockData updateShape(IBlockData iblockdata, EnumDirection enumdirection, IBlockData iblockdata1, GeneratorAccess generatoraccess, BlockPosition blockposition, BlockPosition blockposition1) {
-        return this.canSurvive(iblockdata, generatoraccess, blockposition) ? this.getStateWithAge(generatoraccess, blockposition, (Integer) iblockdata.getValue(BlockFire.AGE)) : Blocks.AIR.defaultBlockState();
+        // CraftBukkit start
+        if (!this.canSurvive(iblockdata, generatoraccess, blockposition)) {
+            // Suppress during worldgen
+            if (!(generatoraccess instanceof World)) {
+                return Blocks.AIR.defaultBlockState();
+            }
+            CraftBlockState blockState = CraftBlockStates.getBlockState(generatoraccess, blockposition);
+            blockState.setData(Blocks.AIR.defaultBlockState());
+
+            BlockFadeEvent event = new BlockFadeEvent(blockState.getBlock(), blockState);
+            ((World) generatoraccess).getCraftServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled()) {
+                return blockState.getHandle();
+            }
+        }
+        return this.getStateWithAge(generatoraccess, blockposition, (Integer) iblockdata.getValue(BlockFire.AGE));
+        // CraftBukkit end
     }
 
     @Override
@@ -141,7 +166,7 @@
         worldserver.scheduleTick(blockposition, (Block) this, getFireTickDelay(worldserver.random));
         if (worldserver.getGameRules().getBoolean(GameRules.RULE_DOFIRETICK)) {
             if (!iblockdata.canSurvive(worldserver, blockposition)) {
-                worldserver.removeBlock(blockposition, false);
+                fireExtinguished(worldserver, blockposition); // CraftBukkit - invalid place location
             }
 
             IBlockData iblockdata1 = worldserver.getBlockState(blockposition.below());
@@ -149,7 +174,7 @@
             int i = (Integer) iblockdata.getValue(BlockFire.AGE);
 
             if (!flag && worldserver.isRaining() && this.isNearRain(worldserver, blockposition) && random.nextFloat() < 0.2F + (float) i * 0.03F) {
-                worldserver.removeBlock(blockposition, false);
+                fireExtinguished(worldserver, blockposition); // CraftBukkit - extinguished by rain
             } else {
                 int j = Math.min(15, i + random.nextInt(3) / 2);
 
@@ -163,14 +188,14 @@
                         BlockPosition blockposition1 = blockposition.below();
 
                         if (!worldserver.getBlockState(blockposition1).isFaceSturdy(worldserver, blockposition1, EnumDirection.UP) || i > 3) {
-                            worldserver.removeBlock(blockposition, false);
+                            fireExtinguished(worldserver, blockposition); // CraftBukkit
                         }
 
                         return;
                     }
 
                     if (i == 15 && random.nextInt(4) == 0 && !this.canBurn(worldserver.getBlockState(blockposition.below()))) {
-                        worldserver.removeBlock(blockposition, false);
+                        fireExtinguished(worldserver, blockposition); // CraftBukkit
                         return;
                     }
                 }
@@ -178,12 +203,14 @@
                 boolean flag1 = worldserver.isHumidAt(blockposition);
                 int k = flag1 ? -50 : 0;
 
-                this.checkBurnOut(worldserver, blockposition.east(), 300 + k, random, i);
-                this.checkBurnOut(worldserver, blockposition.west(), 300 + k, random, i);
-                this.checkBurnOut(worldserver, blockposition.below(), 250 + k, random, i);
-                this.checkBurnOut(worldserver, blockposition.above(), 250 + k, random, i);
-                this.checkBurnOut(worldserver, blockposition.north(), 300 + k, random, i);
-                this.checkBurnOut(worldserver, blockposition.south(), 300 + k, random, i);
+                // CraftBukkit start - add source blockposition to burn calls
+                this.trySpread(worldserver, blockposition.east(), 300 + k, random, i, blockposition);
+                this.trySpread(worldserver, blockposition.west(), 300 + k, random, i, blockposition);
+                this.trySpread(worldserver, blockposition.below(), 250 + k, random, i, blockposition);
+                this.trySpread(worldserver, blockposition.above(), 250 + k, random, i, blockposition);
+                this.trySpread(worldserver, blockposition.north(), 300 + k, random, i, blockposition);
+                this.trySpread(worldserver, blockposition.south(), 300 + k, random, i, blockposition);
+                // CraftBukkit end
                 BlockPosition.MutableBlockPosition blockposition_mutableblockposition = new BlockPosition.MutableBlockPosition();
 
                 for (int l = -1; l <= 1; ++l) {
@@ -209,7 +236,15 @@
                                     if (i2 > 0 && random.nextInt(k1) <= i2 && (!worldserver.isRaining() || !this.isNearRain(worldserver, blockposition_mutableblockposition))) {
                                         int j2 = Math.min(15, i + random.nextInt(5) / 4);
 
-                                        worldserver.setBlock(blockposition_mutableblockposition, this.getStateWithAge(worldserver, blockposition_mutableblockposition, j2), 3);
+                                        // CraftBukkit start - Call to stop spread of fire
+                                        if (worldserver.getBlockState(blockposition_mutableblockposition).getBlock() != Blocks.FIRE) {
+                                            if (CraftEventFactory.callBlockIgniteEvent(worldserver, blockposition_mutableblockposition, blockposition).isCancelled()) {
+                                                continue;
+                                            }
+
+                                            CraftEventFactory.handleBlockSpreadEvent(worldserver, blockposition, blockposition_mutableblockposition, this.getStateWithAge(worldserver, blockposition_mutableblockposition, j2), 3); // CraftBukkit
+                                        }
+                                        // CraftBukkit end
                                     }
                                 }
                             }
@@ -233,12 +268,24 @@
         return iblockdata.hasProperty(BlockProperties.WATERLOGGED) && (Boolean) iblockdata.getValue(BlockProperties.WATERLOGGED) ? 0 : this.flameOdds.getInt(iblockdata.getBlock());
     }
 
-    private void checkBurnOut(World world, BlockPosition blockposition, int i, Random random, int j) {
+    private void trySpread(World world, BlockPosition blockposition, int i, Random random, int j, BlockPosition sourceposition) { // CraftBukkit add sourceposition
         int k = this.getBurnOdd(world.getBlockState(blockposition));
 
         if (random.nextInt(i) < k) {
             IBlockData iblockdata = world.getBlockState(blockposition);
 
+            // CraftBukkit start
+            org.bukkit.block.Block theBlock = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+            org.bukkit.block.Block sourceBlock = world.getWorld().getBlockAt(sourceposition.getX(), sourceposition.getY(), sourceposition.getZ());
+
+            BlockBurnEvent event = new BlockBurnEvent(theBlock, sourceBlock);
+            world.getCraftServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return;
+            }
+            // CraftBukkit end
+
             if (random.nextInt(j + 10) < 5 && !world.isRainingAt(blockposition)) {
                 int l = Math.min(j + random.nextInt(5) / 4, 15);
 
