--- a/net/minecraft/world/effect/MobEffectList.java
+++ b/net/minecraft/world/effect/MobEffectList.java
@@ -19,6 +19,13 @@
 import net.minecraft.world.entity.ai.attributes.AttributeModifier;
 import net.minecraft.world.entity.player.EntityHuman;
 
+// CraftBukkit start
+import net.minecraft.network.protocol.game.PacketPlayOutUpdateHealth;
+import net.minecraft.server.level.EntityPlayer;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
+// CraftBukkit end
+
 public class MobEffectList {
 
     private final Map<AttributeBase, AttributeModifier> attributeModifiers = Maps.newHashMap();
@@ -44,26 +51,37 @@
     public void applyEffectTick(EntityLiving entityliving, int i) {
         if (this == MobEffects.REGENERATION) {
             if (entityliving.getHealth() < entityliving.getMaxHealth()) {
-                entityliving.heal(1.0F);
+                entityliving.heal(1.0F, RegainReason.MAGIC_REGEN); // CraftBukkit
             }
         } else if (this == MobEffects.POISON) {
             if (entityliving.getHealth() > 1.0F) {
-                entityliving.hurt(DamageSource.MAGIC, 1.0F);
+                entityliving.hurt(CraftEventFactory.POISON, 1.0F);  // CraftBukkit - DamageSource.MAGIC -> CraftEventFactory.POISON
             }
         } else if (this == MobEffects.WITHER) {
             entityliving.hurt(DamageSource.WITHER, 1.0F);
         } else if (this == MobEffects.HUNGER && entityliving instanceof EntityHuman) {
-            ((EntityHuman) entityliving).causeFoodExhaustion(0.005F * (float) (i + 1));
+            ((EntityHuman) entityliving).causeFoodExhaustion(0.005F * (float) (i + 1), org.bukkit.event.entity.EntityExhaustionEvent.ExhaustionReason.HUNGER_EFFECT); // CraftBukkit - EntityExhaustionEvent
         } else if (this == MobEffects.SATURATION && entityliving instanceof EntityHuman) {
             if (!entityliving.level.isClientSide) {
-                ((EntityHuman) entityliving).getFoodData().eat(i + 1, 1.0F);
+                // CraftBukkit start
+                EntityHuman entityhuman = (EntityHuman) entityliving;
+                int oldFoodLevel = entityhuman.getFoodData().foodLevel;
+
+                org.bukkit.event.entity.FoodLevelChangeEvent event = CraftEventFactory.callFoodLevelChangeEvent(entityhuman, i + 1 + oldFoodLevel);
+
+                if (!event.isCancelled()) {
+                    entityhuman.getFoodData().eat(event.getFoodLevel() - oldFoodLevel, 1.0F);
+                }
+
+                ((EntityPlayer) entityhuman).connection.send(new PacketPlayOutUpdateHealth(((EntityPlayer) entityhuman).getBukkitEntity().getScaledHealth(), entityhuman.getFoodData().foodLevel, entityhuman.getFoodData().saturationLevel));
+                // CraftBukkit end
             }
         } else if ((this != MobEffects.HEAL || entityliving.isInvertedHealAndHarm()) && (this != MobEffects.HARM || !entityliving.isInvertedHealAndHarm())) {
             if (this == MobEffects.HARM && !entityliving.isInvertedHealAndHarm() || this == MobEffects.HEAL && entityliving.isInvertedHealAndHarm()) {
                 entityliving.hurt(DamageSource.MAGIC, (float) (6 << i));
             }
         } else {
-            entityliving.heal((float) Math.max(4 << i, 0));
+            entityliving.heal((float) Math.max(4 << i, 0), RegainReason.MAGIC); // CraftBukkit
         }
 
     }
@@ -84,7 +102,7 @@
             }
         } else {
             j = (int) (d0 * (double) (4 << i) + 0.5D);
-            entityliving.heal((float) j);
+            entityliving.heal((float) j, RegainReason.MAGIC); // CraftBukkit
         }
 
     }
