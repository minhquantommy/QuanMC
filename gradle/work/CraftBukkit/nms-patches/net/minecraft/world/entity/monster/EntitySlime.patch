--- a/net/minecraft/world/entity/monster/EntitySlime.java
+++ b/net/minecraft/world/entity/monster/EntitySlime.java
@@ -45,6 +45,14 @@
 import net.minecraft.world.level.storage.loot.LootTables;
 import net.minecraft.world.phys.Vec3D;
 
+// CraftBukkit start
+import java.util.ArrayList;
+import java.util.List;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTransformEvent;
+import org.bukkit.event.entity.SlimeSplitEvent;
+// CraftBukkit end
+
 public class EntitySlime extends EntityInsentient implements IMonster {
 
     private static final DataWatcherObject<Integer> ID_SIZE = DataWatcher.defineId(EntitySlime.class, DataWatcherRegistry.INT);
@@ -186,7 +194,7 @@
 
     @Override
     public EntityTypes<? extends EntitySlime> getType() {
-        return super.getType();
+        return (EntityTypes<? extends EntitySlime>) super.getType(); // CraftBukkit - decompile error
     }
 
     @Override
@@ -200,6 +208,19 @@
             int j = i / 2;
             int k = 2 + this.random.nextInt(3);
 
+            // CraftBukkit start
+            SlimeSplitEvent event = new SlimeSplitEvent((org.bukkit.entity.Slime) this.getBukkitEntity(), k);
+            this.level.getCraftServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled() && event.getCount() > 0) {
+                k = event.getCount();
+            } else {
+                super.remove(entity_removalreason);
+                return;
+            }
+            List<EntityLiving> slimes = new ArrayList<>(j);
+            // CraftBukkit end
+
             for (int l = 0; l < k; ++l) {
                 float f1 = ((float) (l % 2) - 0.5F) * f;
                 float f2 = ((float) (l / 2) - 0.5F) * f;
@@ -214,8 +235,18 @@
                 entityslime.setInvulnerable(this.isInvulnerable());
                 entityslime.setSize(j, true);
                 entityslime.moveTo(this.getX() + (double) f1, this.getY() + 0.5D, this.getZ() + (double) f2, this.random.nextFloat() * 360.0F, 0.0F);
-                this.level.addFreshEntity(entityslime);
+                slimes.add(entityslime); // CraftBukkit
+            }
+
+            // CraftBukkit start
+            if (CraftEventFactory.callEntityTransformEvent(this, slimes, EntityTransformEvent.TransformReason.SPLIT).isCancelled()) {
+                super.remove(entity_removalreason);
+                return;
+            }
+            for (EntityLiving living : slimes) {
+                this.level.addFreshEntity(living, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SLIME_SPLIT); // CraftBukkit - SpawnReason
             }
+            // CraftBukkit end
         }
 
         super.remove(entity_removalreason);
